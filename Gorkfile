require! fs
let gorilla = require('./extras/gorillascript').GorillaScript
require! path
let {exec} = require 'child_process'

option \uglify, "u", "Use UglifyJS2 to minify the result"

command \build, "Build browser extras", #(options, cb)
  async! cb, filename-path <- fs.realpath __filename
  let extras-path = path.join(path.dirname(filename-path), "extras")
  let files = ["gorillascript.js", "prism.js", "prism_gs.gs", "index.gs"]
  
  async <- gorilla.init()
  
  let mutable start-time = new Date().get-time()
  asyncfor err, codes <- next, file in files
    async! cb, text <- fs.read-file path.join(extras-path, file), "utf8"
    if r'\.gs$'.test file
      async! cb, compiled <- gorilla.compile text
      next null, compiled.code
    else
      next null, text
  if err?
    return cb(err)
  let code = codes.join ";\n"
  output "Built code.js in $(((new Date().get-time() - start-time) / 1000_ms).to-fixed 3) s\n"
  async! cb <- fs.write-file path.join(extras-path, "code.js"), code, "utf8"
  asyncif next, options.uglify
    start-time := new Date().get-time()
    let uglified = require("uglify-js").minify(code, from-string: true).code
    async! cb <- fs.write-file path.join(extras-path, "code.min.js"), uglified, "utf8"
    output "Built code.min.js in $(((new Date().get-time() - start-time) / 1000_ms).to-fixed 3) s\n"
    next()
  
  cb()